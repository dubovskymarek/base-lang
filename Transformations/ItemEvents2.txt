@@TransformationAdvancedMember:


@HasItemEvent: YES

@OneMemberToOneInstance: YES

@VirtualItemEvents: YES


@Declaration:

MemberClass instance;


@NewMemberBaseClass:

OwnerClass $owner = NULL;


@NewItemBaseClass:

Array<ItemOwnerClass> $arrays;


@assignRef.MemberDirect:

member ##= &instance;


@assignRef.NewMemberDirect:

member = &instance;
member.$owner = &member;


@ItemEventRegister:

Console += "Register:";
item.$arrays.Add(member);


@ItemEventUnregister:

Console += "Unregister:";
item.$arrays.Remove(member);


@ItemEventEnd:

Console += "ItemEvents2";
Int i = 0;
while(i < item.$arrays.Count())
{
	ItemOwnerClass array = &item.$arrays.Item(i);
	if(array.$owner != NULL)
	{
		array.$owner.ItemEvent(array.InverseItemMethod(item), params);
	}
	i += 1;
}


